# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from quake.proto import quake_pb2 as src_dot_python_dot_proto_dot_quake__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in src/python/proto/quake_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class QuakeServiceStub(object):
    """Service definition for the Quake index server
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BuildIndex = channel.unary_unary(
                '/quake.QuakeService/BuildIndex',
                request_serializer=src_dot_python_dot_proto_dot_quake__pb2.BuildIndexRequest.SerializeToString,
                response_deserializer=src_dot_python_dot_proto_dot_quake__pb2.BuildIndexResponse.FromString,
                _registered_method=True)
        self.Search = channel.unary_unary(
                '/quake.QuakeService/Search',
                request_serializer=src_dot_python_dot_proto_dot_quake__pb2.SearchRequest.SerializeToString,
                response_deserializer=src_dot_python_dot_proto_dot_quake__pb2.SearchResponse.FromString,
                _registered_method=True)
        self.AddVectors = channel.unary_unary(
                '/quake.QuakeService/AddVectors',
                request_serializer=src_dot_python_dot_proto_dot_quake__pb2.AddVectorsRequest.SerializeToString,
                response_deserializer=src_dot_python_dot_proto_dot_quake__pb2.AddVectorsResponse.FromString,
                _registered_method=True)
        self.RemoveVectors = channel.unary_unary(
                '/quake.QuakeService/RemoveVectors',
                request_serializer=src_dot_python_dot_proto_dot_quake__pb2.RemoveVectorsRequest.SerializeToString,
                response_deserializer=src_dot_python_dot_proto_dot_quake__pb2.RemoveVectorsResponse.FromString,
                _registered_method=True)
        self.Maintenance = channel.unary_unary(
                '/quake.QuakeService/Maintenance',
                request_serializer=src_dot_python_dot_proto_dot_quake__pb2.MaintenanceRequest.SerializeToString,
                response_deserializer=src_dot_python_dot_proto_dot_quake__pb2.MaintenanceResponse.FromString,
                _registered_method=True)
        self.GetStats = channel.unary_unary(
                '/quake.QuakeService/GetStats',
                request_serializer=src_dot_python_dot_proto_dot_quake__pb2.GetStatsRequest.SerializeToString,
                response_deserializer=src_dot_python_dot_proto_dot_quake__pb2.GetStatsResponse.FromString,
                _registered_method=True)


class QuakeServiceServicer(object):
    """Service definition for the Quake index server
    """

    def BuildIndex(self, request, context):
        """Build the index with given vectors
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Search for nearest neighbors
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddVectors(self, request, context):
        """Add vectors to the index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveVectors(self, request, context):
        """Remove vectors from the index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Maintenance(self, request, context):
        """Perform maintenance on the index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """Get server statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QuakeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BuildIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildIndex,
                    request_deserializer=src_dot_python_dot_proto_dot_quake__pb2.BuildIndexRequest.FromString,
                    response_serializer=src_dot_python_dot_proto_dot_quake__pb2.BuildIndexResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=src_dot_python_dot_proto_dot_quake__pb2.SearchRequest.FromString,
                    response_serializer=src_dot_python_dot_proto_dot_quake__pb2.SearchResponse.SerializeToString,
            ),
            'AddVectors': grpc.unary_unary_rpc_method_handler(
                    servicer.AddVectors,
                    request_deserializer=src_dot_python_dot_proto_dot_quake__pb2.AddVectorsRequest.FromString,
                    response_serializer=src_dot_python_dot_proto_dot_quake__pb2.AddVectorsResponse.SerializeToString,
            ),
            'RemoveVectors': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveVectors,
                    request_deserializer=src_dot_python_dot_proto_dot_quake__pb2.RemoveVectorsRequest.FromString,
                    response_serializer=src_dot_python_dot_proto_dot_quake__pb2.RemoveVectorsResponse.SerializeToString,
            ),
            'Maintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.Maintenance,
                    request_deserializer=src_dot_python_dot_proto_dot_quake__pb2.MaintenanceRequest.FromString,
                    response_serializer=src_dot_python_dot_proto_dot_quake__pb2.MaintenanceResponse.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=src_dot_python_dot_proto_dot_quake__pb2.GetStatsRequest.FromString,
                    response_serializer=src_dot_python_dot_proto_dot_quake__pb2.GetStatsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'quake.QuakeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('quake.QuakeService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QuakeService(object):
    """Service definition for the Quake index server
    """

    @staticmethod
    def BuildIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quake.QuakeService/BuildIndex',
            src_dot_python_dot_proto_dot_quake__pb2.BuildIndexRequest.SerializeToString,
            src_dot_python_dot_proto_dot_quake__pb2.BuildIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quake.QuakeService/Search',
            src_dot_python_dot_proto_dot_quake__pb2.SearchRequest.SerializeToString,
            src_dot_python_dot_proto_dot_quake__pb2.SearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddVectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quake.QuakeService/AddVectors',
            src_dot_python_dot_proto_dot_quake__pb2.AddVectorsRequest.SerializeToString,
            src_dot_python_dot_proto_dot_quake__pb2.AddVectorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveVectors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quake.QuakeService/RemoveVectors',
            src_dot_python_dot_proto_dot_quake__pb2.RemoveVectorsRequest.SerializeToString,
            src_dot_python_dot_proto_dot_quake__pb2.RemoveVectorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Maintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quake.QuakeService/Maintenance',
            src_dot_python_dot_proto_dot_quake__pb2.MaintenanceRequest.SerializeToString,
            src_dot_python_dot_proto_dot_quake__pb2.MaintenanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quake.QuakeService/GetStats',
            src_dot_python_dot_proto_dot_quake__pb2.GetStatsRequest.SerializeToString,
            src_dot_python_dot_proto_dot_quake__pb2.GetStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
